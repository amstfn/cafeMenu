h1 , p , h2{
    text-align: center;
}
    /* To create a little more room around the menu, add 20px of space on the inside of the body element by using the padding property. */
body{
    background-image: url(https://cdn.freecodecamp.org/curriculum/css-cafe/beans.jpg);
    font-family: sans-serif;
    padding: 20px;
}
    /* The goal now is to make the div not take up the entire width of the page. The CSS width property is perfect for this. Create a new type selector in the style sheet that gives your div element a width of 300px. */
    /* A class selector is defined by a name with a dot directly in front of it, */
    /* div */
    /*I changed div selector to .menu class as the course said. */
    /* Change the width property's value to be 80%, to make it 80% the width of its parent element (body). */
    /*  you want to center the div horizontally. You can do this by setting its margin-left and margin-right properties to auto. Think of the margin as invisible space around an element. Using these two margin properties, center the div element within the body element. */
    /* You can give your menu some space between the content and the sides with various padding properties.
    Give the menu class a padding-left and a padding-right with the same value 20px. */
    /* The current width of the menu will always take up 80% of the body element's width. On a very wide screen, the coffee and dessert appear far apart from their prices.
    Add a max-width property to the menu class with a value of 500px to prevent it from growing too wide. */
    
.menu {
    width: 80%;
    background-color: burlywood;
    margin-right: auto;
    margin-left: auto;
    padding-left: 20px;
    padding-right: 20px;
    padding-top: 20px;
    padding-bottom: 20px;/* since 4 side of the padding are same we can delete all of theme and just add "padding:20px" */
    max-width: 500px;
}
    /* width in .favor and price class can put them in one line */
    /* If you make the width of the page preview smaller, you will notice at some point, some of the text on the left starts wrapping around to the next line. This is because the width of the p elements on the left side can only take up 50% of the space.
    Since you know the prices on the right have significantly fewer characters, change the flavor class width value to be 75% and the price class width value to be 25%. */
.dessert , .flavor{
    text-align: left;
    width: /* 50% */75%;
}
.price{
    text-align:right;
    width: /* 50% */25%;
}
    /* The p elements are nested in an article element with the class attribute of item. You can style all the p elements nested anywhere in elements with a class named item like this:
    .item p { }
    add a display property with value inline-block so the p elements behave more like inline elements. */
    /* Focusing on the menu items and prices, there is a fairly large gap between each line.
    Target all the p elements nested in elements with the class named item and set their top and bottom margin to be 5px. */
.item p {
    display: inline-block;
    margin-top: 5px;
    margin-bottom: 5px;
    font-size: 18px;
}
    /* Styling the p elements as inline-block and placing them on separate lines in the code creates an extra space to the right of the first p element, causing the second one to shift to the next line. Styling the p elements as inline-block and placing them on separate lines in the code creates an extra space to the right of the first p element, causing the second one to shift to the next line.  */

    /* You can add a fallback value for the font-family by adding another font name separated by a comma. Fallbacks are used in instances where the initial is not found/available.
    Add the fallback font serif after the Impact font. */
h1 , h2 {
    font-family: Impact , serif;
    }
.established{
    font-style: italic;
}
    /* The typography of heading elements (e.g. h1, h2) is set by default values of users' browsers.
    Add two new type selectors (h1 and h2). Use the font-size property for both, but use the value 40px for the h1 and 30px for the h2. */
    /* The menu text CAMPER CAFE has a different space from the top than the address's space at the bottom of the menu. This is due to the browser having some default top margin for the h1 element.
    Change the top margin of the h1 element to 0 to remove all the top */
    /* To remove some of the vertical space between the h1 element and the text Est. 2020, change the bottom margin of the h1 to 15px. */
h1{
    font-size: 40px;
    margin-top: 0;
    margin-bottom: 15px;
}
h2{
    font-size: 30px;
}
    /* The default value of a property named border-width is 1px for all edges of hr elements. By changing the border to the same color as the background, the total height of the line is 5px (3px plus the top and bottom border width of 1px).
    Change the height property of the hr to be 2px, so the total height of it becomes 4px. */
hr{
    height: 2px;/* last value was 3px */
    border-color: brown;
    background-color: brown;
}
 a{
    color:black;
}
    /* You change properties of a link when the link has actually been visited by using a pseudo-selector that looks like a:visited { propertyName: propertyValue; }. */
a:visited{
    color: black;
}
    /* call these kind of selectors:pseudo-selector */
a:hover{
    color:brown;
}
a:active{
    color: brown;
}
    /*Changing the margin-bottom(.item p) to 5px looks great. However, now the space between the Cinnamon Roll menu item and the second hr element does not match the space between the top hr element and the Coffee heading.
    Add some more space by creating a class named bottom-line using 25px for the margin-top property.  */
.bottom-line{
    margin-top: 25px;
}
footer{
    font-size:18px;
}
.address{
    margin-bottom: 5px;
}
img{
    display: block;
    margin-left: auto;
    margin-right: auto;/* these margins adapt the icon to center */
    margin-top: -25px;
}
    /* It would be nice if the vertical space between the h2 elements and their associated icons was smaller. The h2 elements have default top and bottom margin space, so you could change the bottom margin of the h2 elements to say 0 or another number.
    There is an easier way, simply add a negative top margin to the img elements to pull them up from their current positions. Negative values are created using a - in front of the value. To complete this project, go ahead and use a negative top margin of 25px in the img type selector. */